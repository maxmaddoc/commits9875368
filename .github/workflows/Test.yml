name: Continuous ngrok Run

on:
  workflow_dispatch: # Allow manual trigger
  schedule:
    - cron: "*/30 * * * *" # Backup trigger every 30 minutes for continuity

jobs:
  keep-alive-ngrok:
    runs-on: ubuntu-latest
    timeout-minutes: 355 # Under 6-hour limit

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install
        continue-on-error: true

      - name: Install and Start SSH Server
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-server
          sudo service ssh start
          echo "SSH server started on port 22"
        continue-on-error: true

      - name: Start ngrok for Remote SSH Access
        uses: ncasto/ngrok-action@v3
        with:
          ngrok_version: 3
          auth_token: ${{ secrets.NGROK_AUTHTOKEN }}
          expose_remote_addr: 0.0.0.0:22
          inspect_db_dir: /tmp/ngrok
          enable_ngrok_ssh: true  # Enables SSH tunneling
        continue-on-error: true
        # Outputs: The action will print the public SSH URL (e.g., ssh <user>@<ngrok-subdomain>.ngrok.io) in the logs

      - name: Run Script in Loop
        run: |
          echo "Starting controlled loop for ~5h 50m with ngrok access..."
          end=$((SECONDS+21000)) # 21000 seconds = 5h 50m
          while [ $SECONDS -lt $end ]; do
            echo "Running main script..."
            if [ -f index.js ]; then
              node index.js || echo "Script failed, continuing..."
            else
              echo "index.js not found, skipping..."
            fi
            echo "Iteration complete, sleeping 5 seconds..."
            sleep 5
          done
        continue-on-error: true

      - name: Re-trigger Workflow
        if: always()
        run: |
          echo "Re-triggering workflow..."
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type":"rerun"}'
